version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: wholesale-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-wholesale_market}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - server-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: wholesale-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - server-network

  # Express.js API Server
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wholesale-server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://mongodb:27017/wholesale_market
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    networks:
      - server-network
    volumes:
      - ./logs:/app/logs

  # Nginx Reverse Proxy for API
  nginx:
    image: nginx:alpine
    container_name: server-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - server
    networks:
      - server-network

volumes:
  mongodb_data:
  redis_data:

networks:
  server-network:
    driver: bridge
